#class notes
--start

SELECT 
  CustomerId
  ,FirstName
  ,LastName
FROM customers

​
--2nd step

SELECT *
FROM customers
WHERE Country in ('USA', 'United Kingdom')
ORDER BY Country ASC, LastName DESC
LIMIT 3

​
-- how many customers live in the US?
​

SELECT count(distinct CustomerId) as customer_count
FROM customers
WHERE Country = 'USA'

​
-- how many customer live in each country

SELECT
	Country
	,State
	,count(distinct CustomerId) as customer_count
from customers
group by Country, State

​
--how many tracks per artist?
​
--3503 tracks

select
	artists.ArtistId
	,artists.Name
	,count(distinct tracks.TrackId) as track_count
	--,tracks.Name
	--,albums.AlbumId
	--,albums.Title
from tracks
join albums on albums.AlbumId = tracks.AlbumId
join artists on artists.ArtistId = albums.ArtistId
group by artists.ArtistId

​
--finding the missing artists

select *
from albums
where ArtistId in (25,26,1)

-- solution is because they don't have any albums
​
--in light of this lets explore a better way to join
--join method could fix this problem of missing Artists
​
--created a row per all artists

SELECT *
from artists
--instead of inner join we use left join
left join albums on albums.ArtistId = artists.ArtistId
order by artists.ArtistId

​
-- row per all artists cleaned up with track count

select 
    artists.ArtistId
    ,artists.Name
    ,count(distinct tracks.TrackId) as track_count
from artists
left join albums on albums.ArtistId = artists.ArtistId
left join tracks on tracks.AlbumId = albums.AlbumId
group by artists.ArtistId
order by artists.ArtistId

​
--same as above, but with aliasing
select 
    ar.ArtistId
    ,ar.Name
    ,count(distinct t.TrackId) as track_count
from artists ar
left join albums as a on a.ArtistId = ar.ArtistId
left join tracks as t on t.AlbumId = a.AlbumId
group by ar.ArtistId
order by ar.ArtistId